

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Marina.Data\App.config"
//     Connection String Name: "MarinaContext"
//     Connection String:      "data source=localhost\sqlexpress;initial catalog=Marina;persist security info=True;user id=sa;password=**zapped**;;MultipleActiveResultSets=True;App=EntityFramework"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Marina.Data
{
    using Microsoft.AspNet.Identity;
    using Microsoft.AspNet.Identity.EntityFramework;

    #region Unit of work

    public partial interface IMarinaContext : System.IDisposable
    {
        System.Data.Entity.DbSet<Person> People { get; set; } // Persons

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public partial class MarinaContext : IdentityDbContext<ApplicationUser, MarinaRole, int, MarinaUserLogin, MarinaUserRole, MarinaUserClaim>, IMarinaContext
    {
        public System.Data.Entity.DbSet<Person> People { get; set; } // Persons

        static MarinaContext()
        {
            System.Data.Entity.Database.SetInitializer<MarinaContext>(null);
        }

        public MarinaContext()
            : base("Name=MarinaContext")
        {
            InitializePartial();
        }

        public MarinaContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public MarinaContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public MarinaContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public MarinaContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new PersonConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new PersonConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
    #endregion

    #region POCO classes

    // Persons
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public partial class Person: IEntity
    {
        public int PersonId { get; set; } // PersonId (Primary key)
        public string FirstName { get; set; } // FirstName (length: 255)
        public string LastName { get; set; } // LastName (length: 255)
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth
        public System.DateTime CreatedOn { get; set; } // CreatedOn
        public int CreatedBy { get; set; } // CreatedBy
        public System.DateTime UpdatedOn { get; set; } // UpdatedOn
        public int UpdatedBy { get; set; } // UpdatedBy
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)

        public Person()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    #endregion

    #region POCO Configuration

    // Persons
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public partial class PersonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Person>
    {
        public PersonConfiguration()
            : this("dbo")
        {
        }

        public PersonConfiguration(string schema)
        {
            ToTable("Persons", schema);
            HasKey(x => x.PersonId);

            Property(x => x.PersonId).HasColumnName(@"PersonId").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FirstName).HasColumnName(@"FirstName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.LastName).HasColumnName(@"LastName").IsRequired().HasColumnType("nvarchar").HasMaxLength(255);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").IsOptional().HasColumnType("datetime");
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsRequired().HasColumnType("int");
            Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").IsRequired().HasColumnType("datetime");
            Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").IsRequired().HasColumnType("int");
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    #endregion

}
// </auto-generated>

